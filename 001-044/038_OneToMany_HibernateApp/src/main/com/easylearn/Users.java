package com.easylearn;
// Generated May 5, 2016 5:24:37 AM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", catalog = "springhbdb")
public class Users implements java.io.Serializable {

	private int userId;
	private String firstName;
	private String lastName;
	private String userType;
	private Set<PhoneNumbers> phoneNumberses = new HashSet<PhoneNumbers>(0);

	public Users() {
	}

	public Users(int userId) {
		this.userId = userId;
	}

	public Users(int userId, String firstName, String lastName, String userType, Set<PhoneNumbers> phoneNumberses) {
		this.userId = userId;
		this.firstName = firstName;
		this.lastName = lastName;
		this.userType = userType;
		this.phoneNumberses = phoneNumberses;
	}

	@Id

	@Column(name = "USER_ID", unique = true, nullable = false)
	public int getUserId() {
		return this.userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	@Column(name = "FIRST_NAME", length = 20)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "LAST_NAME", length = 20)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "USER_TYPE", length = 40)
	public String getUserType() {
		return this.userType;
	}

	public void setUserType(String userType) {
		this.userType = userType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<PhoneNumbers> getPhoneNumberses() {
		return this.phoneNumberses;
	}

	public void setPhoneNumberses(Set<PhoneNumbers> phoneNumberses) {
		this.phoneNumberses = phoneNumberses;
	}

}
