package com.easylearn;
// Generated Sep 30, 2016 11:17:57 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SqlResultSetMapping;
import javax.persistence.Table;

import org.hibernate.annotations.NamedNativeQueries;
import org.hibernate.annotations.NamedNativeQuery;
import org.hibernate.annotations.NamedQueries;
import org.hibernate.annotations.NamedQuery;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "employee", catalog = "summitworks_batch2_db")
@NamedQueries(value = { 
		@NamedQuery(name = "getAllEmps", query = "FROM Employee WHERE email like '%gmail.com' order by id asc"),
		@NamedQuery(name = "filterEmps", query = "FROM Employee WHERE amSalary >= :amSalary_parm  ORDER BY id DESC")
		})

@NamedNativeQueries(value = { 
		@NamedNativeQuery(name = "getNativeAllEmps", query = "SELECT * FROM EMPLOYEE", resultClass=Employee.class),
		@NamedNativeQuery(name = "filterNativeEmps", query = "SELECT * FROM EMPLOYEE WHERE AM_SALARY >= :amSalary_parm ORDER BY ID DESC", resultClass=Employee.class)
		})
public class Employee implements java.io.Serializable {

	private Long id;
	private Department department;
	private String firstName;
	private String lastName;
	private String email;
	private String phone;
	private Double amSalary;

	public Employee() {
	}

	public Employee(Department department, String firstName, String lastName, String email, String phone) {
		this.department = department;
		this.firstName = firstName;
		this.lastName = lastName;
		this.email = email;
		this.phone = phone;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_DEPT")
	public Department getDepartment() {
		return this.department;
	}

	public void setDepartment(Department department) {
		this.department = department;
	}

	@Column(name = "first_name", length = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "email", length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "phone", length = 45)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "AM_SALARY", precision = 22, scale = 0)
	public Double getAmSalary() {
		return this.amSalary;
	}

	public void setAmSalary(Double amSalary) {
		this.amSalary = amSalary;
	}

	@Override
	public String toString() {
		return "Employee [id=" + id + ", firstName=" + firstName + ", lastName=" + lastName + ", email=" + email
				+ ", amSalary=" + amSalary + ", phone=" + phone + "]";
	}

}
